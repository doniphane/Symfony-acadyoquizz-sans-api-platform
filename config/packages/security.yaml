security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # Allow OPTIONS requests to pass through without authentication
        options:
            pattern: ^/api
            methods: [OPTIONS]
            security: false
        login:
            pattern: ^/api/login_check$
            stateless: true
            json_login:
                check_path: /api/login_check
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            jwt: ~
        main:
            lazy: true
            provider: app_user_provider

    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/login_check, roles: PUBLIC_ACCESS }
        - { path: ^/api/logout, roles: PUBLIC_ACCESS }
        - { path: ^/api/users/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/mail/forgot-password, roles: PUBLIC_ACCESS }
        - { path: ^/api/mail/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/api/docs, roles: PUBLIC_ACCESS }
        - { path: ^/api/debug, roles: ROLE_USER }
        # Routes publiques pour consultation uniquement (pas pour passer les quiz)
        - { path: ^/api/public/questionnaires$, roles: PUBLIC_ACCESS, methods: [GET] }
        - { path: ^/api/public/questionnaires/\d+$, roles: PUBLIC_ACCESS, methods: [GET] }
        - { path: ^/api/public/questionnaires/code/, roles: PUBLIC_ACCESS, methods: [GET] }
        # Forcer l'authentification pour passer les quiz
        - { path: ^/api/public/questionnaires/.+/submit, roles: ROLE_USER }
        - { path: ^/api/public/tentative, roles: ROLE_USER }
        - { path: ^/api/users/me, roles: ROLE_USER }
        - { path: ^/api/users, roles: ROLE_USER }
        - { path: ^/api, roles: ROLE_USER }
        

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
